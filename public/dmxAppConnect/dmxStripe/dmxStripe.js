/*!
 App Connect Stripe
 Version: 2.0.2
 (c) 2024 Wappler.io
 @build 2024-09-19 14:51:13
 */
dmx.getBootstrapVariable=function(e,t=null){return getComputedStyle(document.body).getPropertyValue("--bs-"+e).trim()||t},dmx.stripe={wait:new Set,locale:"auto",instance:null,elements:null,ready:function(e){dmx.stripe.instance?e(dmx.stripe.instance):dmx.stripe.wait.add(e)},get theme(){return{default:{classes:{},style:{},error:{class:"dmxValidator-invalid"}},bootstrap:{classes:{base:"form-control",invalid:"is-invalid"},style:{base:{color:dmx.getBootstrapVariable("body-color","#212529"),fontFamily:'system-ui,-apple-system,"Segoe UI",Roboto,"Helvetica Neue","Noto Sans","Liberation Sans",Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"',fontSize:"16px",iconColor:dmx.getBootstrapVariable("body-color","#212529"),lineHeight:"26px","::placeholder":{color:dmx.getBootstrapVariable("secondary-color","rgba(222, 226, 230, 0.75)")}}},error:{class:"invalid-feedback"}}}}},dmx.Actions({"stripe.confirmPayment":function(e){if(e||(e={}),!e.confirmParams||!e.confirmParams.return_url)throw Error("confirmParams.return_url is required");return e.elements=dmx.stripe.elements,e.confirmParams.return_url.startsWith("/")&&(e.confirmParams.return_url=location.origin+e.confirmParams.return_url),dmx.stripe.instance.confirmPayment(e)},"stripe.confirmSetup":function(e){if(e||(e={}),!e.confirmParams||!e.confirmParams.return_url)throw Error("confirmParams.return_url is required");return e.elements=dmx.stripe.elements,e.confirmParams.return_url.startsWith("/")&&(e.confirmParams.return_url=location.origin+e.confirmParams.return_url),dmx.stripe.instance.confirmSetup(e)},"stripe.retrievePaymentIntent":function(e){if(e||(e={}),!e.clientSecret)throw Error("clientSecret is required");return dmx.stripe.instance.retrievePaymentIntent(e.clientSecret)},"stripe.retrieveSetupIntent":function(e){if(e||(e={}),!e.clientSecret)throw Error("clientSecret is required");return dmx.stripe.instance.retrieveSetupIntent(e.clientSecret)}}),dmx.Component("stripe",{ui:{deprecated:!0},initialData:{data:null,lastError:null},attributes:{key:{type:String,default:null},account:{type:String,default:null},locale:{type:String,default:"auto"},loader:{type:String,default:"auto",enum:["auto","always","never"]},lineItems:{type:[String,Array],default:null},mode:{type:String,default:"payment",enum:["payment","subscription"]},successUrl:{type:String,default:null},cancelUrl:{type:String,default:null},sessionUrl:{type:String,default:null},paymentUrl:{type:String,default:null},setupUrl:{type:String,default:null},clientSecret:{type:String,default:void 0},theme:{type:String,default:"stripe",enum:["stripe","night","flat"]}},methods:{checkout(e){if(this.props.sessionUrl){let t=this.props.sessionUrl,s={"Content-Type":"application/json"};window.WebviewProxy&&(t=window.WebviewProxy.convertProxyUrl(t));const r=document.querySelector('meta[name="csrf-token"]');return r&&(s["X-CSRF-Token"]=r.content),fetch(t,{method:"POST",credentials:"include",headers:s,body:JSON.stringify({lineItems:this.props.lineItems||[],...e})}).then((e=>{if(e.ok)return e.json().then((e=>{if(e.id)return dmx.stripe.instance.redirectToCheckout({sessionId:e.id}).then((e=>{e.error&&this._error(e.error)}));e.error?this._error(e.error):this._error("Id is missing in session response.")}));this._error("An error occurred during the transaction.")})).catch((e=>{this._error(e.message)}))}const t={lineItems:this.props.lineItems,mode:this.props.mode,successUrl:this.props.successUrl,cancelUrl:this.props.cancelUrl};return t.successUrl?t.cancelUrl?("string"==typeof t.lineItems&&(t.lineItems=[t.lineItems]),Array.isArray(t.lineItems)?(t.lineItems=t.lineItems.map((e=>"string"==typeof e?{price:e,quantity:1}:{price:e.price||e.sku||e.plan,quantity:e.quantity||1})),t.successUrl=this._fixUrl(t.successUrl),t.cancelUrl=this._fixUrl(t.cancelUrl),dmx.stripe.instance.redirectToCheckout(t).then((e=>{e.error&&this._error(e.error)}))):this._error("Invalid line items.")):this._error("cancelUrl is required."):this._error("successUrl is required.")},createPayment(e){if(this.props.paymentUrl){let t=this.props.paymentUrl,s={"Content-Type":"application/json"};window.WebviewProxy&&(t=window.WebviewProxy.convertProxyUrl(t));const r=document.querySelector('meta[name="csrf-token"]');return r&&(s["X-CSRF-Token"]=r.content),fetch(t,{method:"POST",credentials:"include",headers:s,body:JSON.stringify({lineItems:this.props.lineItems||[],...e})}).then((e=>{if(e.ok)return e.json().then((e=>{e.client_secret&&(dmx.stripe.client_secret=e.client_secret),this.set("data",e),this.dispatchEvent("done"),this.dispatchEvent("payment_created")}));this._error("An error occurred during the transaction.")})).catch((e=>{this._error(e.message)}))}},createSetup(e){if(this.props.setupUrl){let t=this.props.setupUrl,s={"Content-Type":"application/json"};window.WebviewProxy&&(t=window.WebviewProxy.convertProxyUrl(t));const r=document.querySelector('meta[name="csrf-token"]');return r&&(s["X-CSRF-Token"]=r.content),fetch(t,{method:"POST",credentials:"include",headers:s,body:JSON.stringify({lineItems:this.props.lineItems||[],...e})}).then((e=>{if(e.ok)return e.json().then((e=>{e.client_secret&&(dmx.stripe.client_secret=e.client_secret),this.set("data",e),this.dispatchEvent("done"),this.dispatchEvent("setup_created")}));this._error("An error occurred during the transaction.")})).catch((e=>{this._error(e.message)}))}}},events:{done:Event,error:Event,ready:Event,payment_created:Event,setup_created:Event},render:!1,init(){this.props.key&&this._setup()},performUpdate(e){e.has("key")&&this._setup()},_setup(){if(!this.$node.hasAttribute("dmx-bind:client-secret")||this.props.clientSecret)try{dmx.stripe.locale=this.props.locale;const e={locale:this.props.locale};if(this.props.account&&(e.stripeAccount=this.props.account),dmx.stripe.instance=Stripe(this.props.key,e),dmx.stripe.elements=dmx.stripe.instance.elements({clientSecret:this.props.clientSecret,locale:this.props.locale,loader:this.props.loader,appearance:{theme:this.props.theme}}),dmx.stripe.wait.size){for(const e of dmx.stripe.wait)e(dmx.stripe.instance);dmx.stripe.wait.clear()}this.dispatchEvent("ready")}catch(e){console.error(e)}},_fixUrl(e){var t=document.createElement("a");return t.setAttribute("href",e),t.href},_error(e){console.error(e),this.set("lastError",e),this.dispatchEvent("error")}}),dmx.Component("stripe-au-bank-account",{ui:{deprecated:!0},initialData:{complete:!1,empty:!0,bankName:"",branchName:"",error:void 0,source:void 0,paymentMethod:void 0,paymentIntent:void 0,setupIntent:void 0},attributes:{value:{type:String,default:""},iconStyle:{type:String,default:"default",enum:["default","solid"]},hideIcon:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},hideErrors:{type:Boolean,default:!1},accountholderName:{type:String,default:""}},methods:{blur(){this._element&&this._element.blur()},clear(){this._element&&this._element.clear()},focus(){this._element&&this._element.focus()},createSource(e){if(this._element)return dmx.stripe.instance.createSource(this._element,e).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("source",e.source),this.dispatchEvent("source_created")),e)))},createPaymentMethod(){if(this._element)return dmx.stripe.instance.createPaymentMethod({type:"au_becs_debit",au_becs_debit:this._element}).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("paymentMethod",e.paymentMethod),this.dispatchEvent("payment_method_created")),e)))},confirmPayment(e){if(this._element)return dmx.stripe.instance.confirmAuBecsDebitPayment(e||dmx.stripe.client_secret,{payment_method:{au_becs_debit:this._element,billing_details:{name:this.props.accountholderName}}}).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("paymentIntent",e.paymentIntent),this.dispatchEvent("payment_confirmed")),e)))},confirmSetup(e){if(this._element){let t=this;return dmx.stripe.instance.confirmAuBecsDebitSetup(e||dmx.stripe.client_secret,{payment_method:{au_becs_debit:this._element,billing_details:{name:this.props["accountholder-name"]}}}).then((e=>(e.error?(t.set("error",e.error),t.dispatchEvent("error")):(t.set("setupIntent",e.setupIntent),t.dispatchEvent("setup_confirmed")),e)))}}},events:{change:Event,ready:Event,focus:Event,blur:Event,escape:Event,error:Event,source_created:Event,payment_method_created:Event,payment_confirmed:Event,setup_confirmed:Event},render(e){dmx.stripe.ready((()=>{let t=dmx.stripe.theme[window.bootstrap?"bootstrap":"default"];this._element=dmx.stripe.elements.create("auBankAccount",{value:this.props.value,iconStyle:this.props.iconStyle,hideIcon:this.props.hideIcon,disabled:this.props.disabled,classes:t.classes,style:t.style}),this._element.mount(e),this._errorElement=document.createElement("div"),this._errorElement.className=t.error.class,e.insertAdjacentElement("afterend",this._errorElement),this._element.on("change",this._changeHandler.bind(this)),this._element.on("change",this.dispatchEvent.bind(this,"change")),this._element.on("ready",this.dispatchEvent.bind(this,"ready")),this._element.on("focus",this.dispatchEvent.bind(this,"focus")),this._element.on("blur",this.dispatchEvent.bind(this,"blur")),this._element.on("escape",this.dispatchEvent.bind(this,"escape"))}))},performUpdate(e){this._element&&(e.has("value")&&this._element.update({value:this.props.value}),e.has("iconStyle")&&this._element.update({iconStyle:this.props.iconStyle}),e.has("hideIcon")&&this._element.update({hideIcon:this.props.hideIcon}),e.has("disabled")&&this._element.update({disabled:this.props.disabled}))},destroy(){this._element&&this._element.destroy()},_changeHandler(e){this.set(e),this.props.hideErrors||(this._errorElement.textContent=e.error?e.error.message:"")}}),dmx.Component("stripe-card",{ui:{deprecated:!0},initialData:{complete:!1,brand:"",empty:!0,value:{postalCode:""},error:void 0,token:void 0,source:void 0,paymentMethod:void 0,paymentIntent:void 0,setupIntent:void 0},attributes:{hidePostalCode:{type:Boolean,default:!1},iconStyle:{type:String,default:"default",enum:["default","solid"]},hideIcon:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},hideErrors:{type:Boolean,default:!1}},methods:{blur(){this_element&&this._element.blur()},clear(){this._element&&this._element.clear()},focus(){this._element&&this._element.focus()},createToken(e){if(this._element)return dmx.stripe.instance.createToken(this._element,e).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("token",e.token),this.dispatchEvent("token_created")),e)))},createSource(e){if(this._element)return dmx.stripe.instance.createSource(this._element,e).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("source",e.source),this.dispatchEvent("source_created")),e)))},createPaymentMethod(){if(this._element)return dmx.stripe.instance.createPaymentMethod({type:"card",card:this._element}).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("paymentMethod",e.paymentMethod),this.dispatchEvent("payment_method_created")),e)))},confirmPayment(e){if(this._element)return dmx.stripe.instance.confirmCardPayment(e||dmx.stripe.client_secret,{payment_method:{card:this._element}}).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("paymentIntent",e.paymentIntent),this.dispatchEvent("payment_confirmed")),e)))},confirmSetup(e){if(this._element)return dmx.stripe.instance.confirmCardSetup(e||dmx.stripe.client_secret,{payment_method:{card:this._element}}).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("setupIntent",e.setupIntent),this.dispatchEvent("setup_confirmed")),e)))}},events:{change:Event,ready:Event,focus:Event,blur:Event,escape:Event,error:Event,token_created:Event,source_created:Event,payment_method_created:Event,payment_confirmed:Event,setup_confirmed:Event},render(e){dmx.stripe.ready((()=>{let t=dmx.stripe.theme[window.bootstrap?"bootstrap":"default"];this._element=dmx.stripe.elements.create("card",{hidePostalCode:this.props.hidePostalCode,iconStyle:this.props.iconStyle,hideIcon:this.props.hideIcon,disabled:this.props.disabled,classes:t.classes,style:t.style}),this._element.mount(e),this._errorElement=document.createElement("div"),this._errorElement.className=t.error.class,e.insertAdjacentElement("afterend",this._errorElement),this._element.on("change",this._changeHandler.bind(this)),this._element.on("change",this.dispatchEvent.bind(this,"change")),this._element.on("ready",this.dispatchEvent.bind(this,"ready")),this._element.on("focus",this.dispatchEvent.bind(this,"focus")),this._element.on("blur",this.dispatchEvent.bind(this,"blur")),this._element.on("escape",this.dispatchEvent.bind(this,"escape"))}))},performUpdate(e){this._element&&(e.has("hidePostalCode")&&this._element.update({hidePostalCode:this.props.hidePostalCode}),e.has("iconStyle")&&this._element.update({iconStyle:this.props.iconStyle}),e.has("hideIcon")&&this._element.update({hideIcon:this.props.hideIcon}),e.has("disabled")&&this._element.update({disabled:this.props.disabled}))},destroy(){this._element&&this._element.destroy()},_changeHandler(e){this.set(e),this.props.hideErrors||(this._errorElement.textContent=e.error?e.error.message:"")}}),dmx.Component("stripe-card-cvc",{ui:{deprecated:!0},initialData:{complete:!1,empty:!0,error:void 0},attributes:{placeholder:{type:String,default:""},disabled:{type:Boolean,default:!1},hideErrors:{type:Boolean,default:!1}},methods:{blur(){this._element.blur()},clear(){this._element.clear()},focus(){this._element.focus()}},events:{change:Event,ready:Event,focus:Event,blur:Event,escape:Event},render(e){dmx.stripe.ready((()=>{let t=dmx.stripe.theme[window.bootstrap?"bootstrap":"default"];this._element=dmx.stripe.elements.create("cardCvc",{placeholder:this.props.placeholder,disabled:this.props.disabled,classes:t.classes,style:t.style}),this._element.mount(e),this._errorElement=document.createElement("div"),this._errorElement.className=t.error.class,e.insertAdjacentElement("afterend",this._errorElement),this._element.on("change",this._changeHandler.bind(this)),this._element.on("change",this.dispatchEvent.bind(this,"change")),this._element.on("ready",this.dispatchEvent.bind(this,"ready")),this._element.on("focus",this.dispatchEvent.bind(this,"focus")),this._element.on("blur",this.dispatchEvent.bind(this,"blur")),this._element.on("escape",this.dispatchEvent.bind(this,"escape"))}))},performUpdate(e){this._element&&(e.has("placeholder")&&this._element.update({placeholder:this.props.placeholder}),e.has("disabled")&&this._element.update({disabled:this.props.disabled}))},destroy(){this._element&&this._element.destroy()},_changeHandler(e){this.set(e),this.props.hideErrors||(this._errorElement.textContent=e.error?e.error.message:"")}}),dmx.Component("stripe-card-expiry",{ui:{deprecated:!0},initialData:{complete:!1,empty:!0,error:void 0},attributes:{placeholder:{type:String,default:""},disabled:{type:Boolean,default:!1},hideErrors:{type:Boolean,default:!1}},methods:{blur(){this._element.blur()},clear(){this._element.clear()},focus(){this._element.focus()}},events:{change:Event,ready:Event,focus:Event,blur:Event,escape:Event},render(e){dmx.stripe.ready((()=>{let t=dmx.stripe.theme[window.bootstrap?"bootstrap":"default"];this._element=dmx.stripe.elements.create("cardExpiry",{placeholder:this.props.placeholder,disabled:this.props.disabled,classes:t.classes,style:t.style}),this._element.mount(e),this._errorElement=document.createElement("div"),this._errorElement.className=t.error.class,e.insertAdjacentElement("afterend",this._errorElement),this._element.on("change",this._changeHandler.bind(this)),this._element.on("change",this.dispatchEvent.bind(this,"change")),this._element.on("ready",this.dispatchEvent.bind(this,"ready")),this._element.on("focus",this.dispatchEvent.bind(this,"focus")),this._element.on("blur",this.dispatchEvent.bind(this,"blur")),this._element.on("escape",this.dispatchEvent.bind(this,"escape"))}))},performUpdate(e){this._element&&(e.has("placeholder")&&this._element.update({placeholder:this.props.placeholder}),e.has("disabled")&&this._element.update({disabled:this.props.disabled}))},destroy(){this._element&&this._element.destroy()},_changeHandler(e){this.set(e),this.props.hideErrors||(this._errorElement.textContent=e.error?e.error.message:"")},onchange:function(e){this.set(e),this.props["hide-errors"]||(this.errorElement.textContent=e.error?e.error.message:"")}}),dmx.Component("stripe-card-number",{ui:{deprecated:!0},initialData:{complete:!1,brand:"",empty:!0,error:void 0,paymentMethod:void 0,paymentIntent:void 0,setupIntent:void 0},attributes:{placeholder:{type:String,default:""},iconStyle:{type:String,default:"default",enum:["default","solid"]},showIcon:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},hideErrors:{type:Boolean,default:!1}},methods:{blur(){this._element.blur()},clear(){this._element.clear()},focus(){this._element.focus()},createPaymentMethod(){if(this._element)return dmx.stripe.instance.createPaymentMethod({type:"card",card:this._element}).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("paymentMethod",e.paymentMethod),this.dispatchEvent("payment_method_created")),e)))},confirmPayment(e){if(this._element)return dmx.stripe.instance.confirmCardPayment(e||dmx.stripe.client_secret,{payment_method:{card:this._element}}).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("paymentIntent",e.paymentIntent),this.dispatchEvent("payment_confirmed")),e)))},confirmSetup(e){if(this._element)return dmx.stripe.instance.confirmCardSetup(e||dmx.stripe.client_secret,{payment_method:{card:this._element}}).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("setupIntent",e.setupIntent),this.dispatchEvent("setup_confirmed")),e)))}},events:{change:Event,ready:Event,focus:Event,blur:Event,escape:Event},render(e){dmx.stripe.ready((()=>{let t=dmx.stripe.theme[window.bootstrap?"bootstrap":"default"];this._element=dmx.stripe.elements.create("cardNumber",{placeholder:this.props.placeholder,iconStyle:this.props.iconStyle,showIcon:this.props.showIcon,disabled:this.props.disabled,classes:t.classes,style:t.style}),this._element.mount(e),this._errorElement=document.createElement("div"),this._errorElement.className=t.error.class,e.insertAdjacentElement("afterend",this._errorElement),this._element.on("change",this._changeHandler.bind(this)),this._element.on("change",this.dispatchEvent.bind(this,"change")),this._element.on("ready",this.dispatchEvent.bind(this,"ready")),this._element.on("focus",this.dispatchEvent.bind(this,"focus")),this._element.on("blur",this.dispatchEvent.bind(this,"blur")),this._element.on("escape",this.dispatchEvent.bind(this,"escape"))}))},performUpdate(e){this._element&&(e.has("placeholder")&&this._element.update({placeholder:this.props.placeholder}),e.has("iconStyle")&&this._element.update({iconStyle:this.props.iconStyle}),e.has("showIcon")&&this._element.update({showIcon:this.props.showIcon}),e.has("disabled")&&this._element.update({disabled:this.props.disabled}))},destroy(){this._element&&this._element.destroy()},_changeHandler(e){this.set(e),this.prop.hideErrors||(this._errorElement.textContent=e.error?e.error.message:"")}}),dmx.Component("stripe-eps-bank",{ui:{deprecated:!0},initialData:{complete:!1,empty:!0,value:"",error:void 0,source:void 0,paymentMethod:void 0,paymentIntent:void 0},attributes:{value:{type:String,default:""},hideIcon:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},returnUrl:{type:String,default:window.location.href},hideErrors:{type:Boolean,default:!1},accountholderName:{type:String,default:""}},methods:{blur(){this._element&&this._element.blur()},clear(){this._element&&this._element.clear()},focus(){this._element&&this._element.focus()},createSource(e){if(this._element)return dmx.stripe.instance.createSource(this._element,e).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("source",e.source),this.dispatchEvent("source_created")),e)))},createPaymentMethod(){if(this._element)return dmx.stripe.instance.createPaymentMethod({type:"eps",eps:this._element}).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("paymentMethod",e.paymentMethod),this.dispatchEvent("payment_method_created")),e)))},confirmPayment(e){if(this._element)return dmx.stripe.instance.confirmEpsPayment(e||dmx.stripe.client_secret,{payment_method:{eps:this._element,billing_details:{name:this.props.accountholderName}},return_url:this.props.returnUrl}).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("paymentIntent",e.paymentIntent),this.dispatchEvent("payment_confirmed")),e)))}},events:{change:Event,ready:Event,focus:Event,blur:Event,escape:Event,error:Event,source_created:Event,payment_method_created:Event,payment_confirmed:Event},render(e){dmx.stripe.ready((t=>{let s=dmx.stripe.theme[window.bootstrap?"bootstrap":"default"];this._element=dmx.stripe.elements.create("epsBank",{value:this.props.value,hideIcon:this.props.hideIcon,disabled:this.props.disabled,classes:s.classes,style:s.style}),this._element.mount(e),this._element.on("change",this._changeHandler.bind(this)),this._element.on("change",this.dispatchEvent.bind(this,"change")),this._element.on("ready",this.dispatchEvent.bind(this,"ready")),this._element.on("focus",this.dispatchEvent.bind(this,"focus")),this._element.on("blur",this.dispatchEvent.bind(this,"blur")),this._element.on("escape",this.dispatchEvent.bind(this,"escape"))}))},performUpdate(e){e.has("value")&&this._element.update({value:this.props.value}),e.has("hideIcon")&&this._element.update({hideIcon:this.props.hideIcon}),e.has("disabled")&&this._element.update({disabled:this.props.disabled})},destroy(){this._element&&this._element.destroy()},_changeHandler(e){this.set(e),this.props.hideErrors||(this.errorElement.textContent=e.error?e.error.message:"")}}),dmx.Component("stripe-fpx-bank",{ui:{deprecated:!0},initialData:{complete:!1,empty:!0,error:void 0,source:void 0,paymentMethod:void 0,paymentIntent:void 0},attributes:{value:{type:String,default:""},accountHolderType:{type:String,default:""},disabled:{type:Boolean,default:!1},returnUrl:{type:String,default:window.location.href},hideErrors:{type:Boolean,default:!1}},methods:{blur(){this._element&&this._element.blur()},clear(){this._element&&this._element.clear()},focus(){this._element&&this._element.focus()},createSource(e){if(this._element)return dmx.stripe.instance.createSource(this._element,e).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("source",e.source),this.dispatchEvent("source_created")),e)))},createPaymentMethod(){if(this._element)return dmx.stripe.instance.createPaymentMethod({type:"fpx",fpx:this._element}).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("paymentMethod",e.paymentMethod),this.dispatchEvent("payment_method_created")),e)))},confirmPayment(e){if(this._element)return dmx.stripe.instance.confirmFpxPayment(e||dmx.stripe.client_secret,{payment_method:{fpx:this._element},return_url:this.props.returnUrl}).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("paymentIntent",e.paymentIntent),this.dispatchEvent("payment_confirmed")),e)))}},events:{change:Event,ready:Event,focus:Event,blur:Event,escape:Event,error:Event,source_created:Event,payment_method_created:Event,payment_confirmed:Event},render(e){dmx.stripe.ready((()=>{const t=dmx.stripe.theme[window.bootstrap?"bootstrap":"default"];this._element=dmx.stripe.instance.elements.create("fpxBank",{value:this.props.value,accountHolderType:this.props.accountHolderType,disabled:this.props.disabled,classes:t.classes,style:t.style}),this._element.mount(e),this._element.on("change",this._changeHandler.bind(this)),this._element.on("change",this.dispatchEvent.bind(this,"change")),this._element.on("ready",this.dispatchEvent.bind(this,"ready")),this._element.on("focus",this.dispatchEvent.bind(this,"focus")),this._element.on("blur",this.dispatchEvent.bind(this,"blur")),this._element.on("escape",this.dispatchEvent.bind(this,"escape"))}))},performUpdate(e){this._element&&(e.has("value")&&this._element.update({value:this.props.value}),e.has("accountHolderType")&&this._element.update({accountHolderType:this.props.accountHolderType}),e.has("disabled")&&this._element.update({disabled:this.props.disabled}))},destroy(){this._element&&this._element.destroy()},_changeHandler:function(e){this.set(e),this.props.hideErrors||(this.errorElement.textContent=e.error?e.error.message:"")}}),dmx.Component("stripe-iban",{ui:{deprecated:!0},initialData:{complete:!1,country:"",bankName:"",empty:!0,error:void 0,source:void 0,paymentMethod:void 0,paymentIntent:void 0,setupIntent:void 0},attributes:{supportedCountries:{type:Array,default:["SEPA"]},placeholderCountry:{type:String,default:""},iconStyle:{type:String,default:"default",enum:["default","solid"]},hideIcon:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},hideErrors:{type:Boolean,default:!1},accountholderName:{type:String,default:""}},methods:{blur(){this._element&&this._element.blur()},clear(){this._element&&this._element.clear()},focus(){this._element&&this._element.focus()},createSource(e){if(this._element)return dmx.stripe.instance.createSource(this._element,e).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("source",e.source),this.dispatchEvent("source_created")),e)))},createPaymentMethod(){if(this._element)return dmx.stripe.instance.createPaymentMethod({type:"sepa_debit",sepa_debit:this._element}).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("paymentMethod",e.paymentMethod),this.dispatchEvent("payment_method_created")),e)))},confirmPayment(e){if(this._element)return dmx.stripe.instance.confirmSepaDebitPayment(e||dmx.stripe.client_secret,{payment_method:{sepa_debit:this._element,billing_details:{name:this.props.accountholderName}}}).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("paymentIntent",e.paymentIntent),this.dispatchEvent("payment_confirmed")),e)))},confirmSetup(e){if(this._element)return dmx.stripe.instance.confirmSepaDebitSetup(e||dmx.stripe.client_secret,{payment_method:{sepa_debit:this._element,billing_details:{name:this.props.accountholderName}}}).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("setupIntent",e.setupIntent),this.dispatchEvent("setup_confirmed")),e)))}},events:{change:Event,ready:Event,focus:Event,blur:Event,escape:Event,error:Event,source_created:Event,payment_method_created:Event,payment_confirmed:Event,setup_confirmed:Event},render(e){dmx.stripe.ready((()=>{let t=dmx.stripe.theme[window.bootstrap?"bootstrap":"default"];this._element=dmx.stripe.elements.create("iban",{supportedCountries:this.props.supportedCountries,placeholderCountry:this.props.placeholderCountry,iconStyle:this.props.iconStyle,hideIcon:this.props.hideIcon,disabled:this.props.disabled,classes:t.classes,style:t.style}),this._element.mount(e),this._errorElement=document.createElement("div"),this._errorElement.className=t.error.class,e.insertAdjacentElement("afterend",this._errorElement),this._element.on("change",this._changeHandler.bind(this)),this._element.on("change",this.dispatchEvent.bind(this,"change")),this._element.on("ready",this.dispatchEvent.bind(this,"ready")),this._element.on("focus",this.dispatchEvent.bind(this,"focus")),this._element.on("blur",this.dispatchEvent.bind(this,"blur")),this._element.on("escape",this.dispatchEvent.bind(this,"escape"))}))},performUpdate(e){this._element&&(e.has("supportedCountries")&&this._element.update({supportedCountries:this.props.supportedCountries}),e.has("placeholderCountry")&&this._element.update({placeholderCountry:this.props.placeholderCountry}),e.has("iconStyle")&&this._element.update({iconStyle:this.props.iconStyle}),e.has("hideIcon")&&this._element.update({hideIcon:this.props.hideIcon}),e.has("disabled")&&this._element.update({disabled:this.props.disabled}))},destroy(){this._element&&this._element.destroy()},_changeHandler(e){this.set(e),this.props.hideErrors||(this._errorElement.textContent=e.error?e.error.message:"")}}),dmx.Component("stripe-ideal-bank",{ui:{deprecated:!0},initialData:{complete:!1,empty:!0,value:"",error:void 0,source:void 0,paymentMethod:void 0,paymentIntent:void 0,setupIntent:void 0},attributes:{value:{type:String,default:""},hideIcon:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},returnUrl:{type:String,default:window.location.href},hideErrors:{type:Boolean,default:!1},accountholderName:{type:String,default:""}},methods:{blur(){this._element&&this._element.blur()},clear(){this._element&&this._element.clear()},focus(){this._element&&this._element.focus()},createSource(e){if(this._element)return dmx.stripe.instance.createSource(this._element,e).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("source",e.source),this.dispatchEvent("source_created")),e)))},createPaymentMethod(){if(this._element)return dmx.stripe.instance.createPaymentMethod({type:"ideal",ideal:this._element}).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("paymentMethod",e.paymentMethod),this.dispatchEvent("payment_method_created")),e)))},confirmPayment(e){if(this._element)return dmx.stripe.instance.confirmIdealPayment(e||dmx.stripe.client_secret,{payment_method:{ideal:this._element,billing_details:{name:this.props.accountholderName}},return_url:this.props.returnUrl}).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("paymentIntent",e.paymentIntent),this.dispatchEvent("payment_confirmed")),e)))},confirmSetup(e){if(this._element)return dmx.stripe.instance.confirmIdealSetup(e||dmx.stripe.client_secret,{payment_method:{ideal:this._element,billing_details:{name:this.props.accountholderName}}}).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("setupIntent",e.setupIntent),this.dispatchEvent("setup_confirmed")),e)))}},events:{change:Event,ready:Event,focus:Event,blur:Event,escape:Event,error:Event,source_created:Event,payment_method_create:Event,payment_confirmed:Event,setup_confirmed:Event},render(e){dmx.stripe.ready((()=>{const t=dmx.stripe.theme[window.bootstrap?"bootstrap":"default"];this._element=dmx.stripe.elements.create("idealBank",{value:this.props.value,hideIcon:this.props.hideIcon,disabled:this.props.disabled,classes:t.classes,style:t.style}),this._element.mount(e),this._errorElement=document.createElement("div"),this._errorElement.className=t.error.class,e.insertAdjacentElement("afterend",this._errorElement),this._element.on("change",this._changeHandler.bind(this)),this._element.on("change",this.dispatchEvent.bind(this,"change")),this._element.on("ready",this.dispatchEvent.bind(this,"ready")),this._element.on("focus",this.dispatchEvent.bind(this,"focus")),this._element.on("blur",this.dispatchEvent.bind(this,"blur")),this._element.on("escape",this.dispatchEvent.bind(this,"escape"))}))},performUpdate(e){this._element&&(e.has("value")&&this._element.update({value:this.props.value}),e.has("hideIcon")&&this._element.update({hideIcon:this.props.hideIcon}),e.has("disabled")&&this._element.update({disabled:this.props.disabled}))},destroy(){this._element&&this._element.destroy()},_changeHandler(e){this.set(e),this.props.hideErrors||(this._errorElement.textContent=e.error?e.error.message:"")}}),dmx.Component("stripe-p24-bank",{ui:{deprecated:!0},initialData:{complete:!1,empty:!0,value:"",error:void 0,source:void 0,paymentMethod:void 0,paymentIntent:void 0},attributes:{value:{type:String,default:""},hideIcon:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},returnUrl:{type:String,default:window.location.href},hideErrors:{type:Boolean,default:!1},accountholderName:{type:String,default:""},tosShownAndAccepted:{type:Boolean,default:!1}},methods:{blur(){this._element&&this._element.blur()},clear(){this._element&&this._element.clear()},focus(){this._element&&this._element.focus()},createSource(e){if(this._element)return dmx.stripe.instance.createSource(this._element,e).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("source",e.source),this.dispatchEvent("source_created")),e)))},createPaymentMethod(e){if(this._element)return dmx.stripe.instance.createPaymentMethod({type:"p24",p24:this._element}).then((e=>(e.error?(this.set("error",e.error),this.dispatchEvent("error")):(this.set("paymentMethod",e.paymentMethod),this.dispatchEvent("payment_method_created")),e)))},confirmPayment(e){this._element&&dmx.stripe.instance.confirmP24Payment(e||dmx.stripe.client_secret,{payment_method:{p24:this._element,billing_details:{name:this.props.accountholderName}},payment_method_options:{p24:{tos_shown_and_accepted:this.props.tosShownAndAccepted}},return_url:this.props.returnUrl}).then((e=>{e.error&&this.set("error",e.error),this.set("paymentIntent",e.paymentIntent)}))}},events:{change:Event,ready:Event,focus:Event,blur:Event,escape:Event,error:Event,source_created:Event,payment_method_created:Event,payment_confirmed:Event},render(e){dmx.stripe.ready((()=>{const t=dmx.stripe.theme[window.bootstrap?"bootstrap":"default"];this._element=dmx.stripe.elements.create("p24Bank",{value:this.props.value,hideIcon:this.props.hideIcon,disabled:this.props.disabled,classes:t.classes,style:t.style}),this._element.mount(e),this._errorElement=document.createElement("div"),this._errorElement.className=t.error.class,e.insertAdjacentElement("afterend",this._errorElement),this._element.on("change",this._changeHandler.bind(this)),this._element.on("change",this.dispatchEvent.bind(this,"change")),this._element.on("ready",this.dispatchEvent.bind(this,"ready")),this._element.on("focus",this.dispatchEvent.bind(this,"focus")),this._element.on("blur",this.dispatchEvent.bind(this,"blur")),this._element.on("escape",this.dispatchEvent.bind(this,"escape"))}))},performUpdate(e){e.has("value")&&this._element.update({value:this.props.value}),e.has("hideIcon")&&this._element.update({hideIcon:this.props.hideIcon}),e.has("disabled")&&this._element.update({disabled:this.props.disabled})},destroy(){this._element&&this._element.destroy()},_changeHandler(e){this.set(e),this.props.hideErrors||(this._errorElement.textContent=e.error?e.error.message:"")}}),dmx.Component("stripe-payment-request-button",{ui:{deprecated:!0},initialData:{token:null,source:null,paymentMethod:null,shippingAddress:null,shippingOption:null},attributes:{country:{type:String,default:""},currency:{type:String,default:""},label:{type:String,default:""},amount:{type:Number,default:null},pending:{type:Boolean,default:!1},items:{type:Array,default:null},requestName:{type:Boolean,default:!1},requestEmail:{type:Boolean,default:!1},requestPhone:{type:Boolean,default:!1},requestShipping:{type:Boolean,default:!1},shippingOptions:{type:Array,default:null}},methods:{complete(){this._complete&&this._complete()},updateWith(e){this._updateWith&&this._updateWith(e)}},events:{click:Event,token:Event,source:Event,paymentmethod:Event,shippingoptionchange:Event},render(e){dmx.stripe.ready((()=>{let t=dmx.stripe.theme[window.bootstrap?"bootstrap":"default"];this._paymentRequest=dmx.stripe.paymentRequest({country:this.props.country,currency:this.props.currency,total:{label:this.props.label,amount:this.props.amount,pending:this.props.pending},displayItems:this.props.items,requestPayerName:this.props.requestName,requestPayerEmail:this.props.requestEmail,requestPayerPhone:this.props.requestPhone,requestShipping:this.props.requestShipping,shippingOptions:this.props.shippingOptions}),this._paymentRequest.on("token",(e=>{this.set("token",e.token),this.dispatchEvent("token"),this.complete=e.complete})),this._paymentRequest.on("source",(e=>{this.set("source",e.source),this.dispatchEvent("source"),this.complete=e.complete})),this._paymentRequest.on("paymentmethod",(e=>{this.set("paymentMethod",e.paymentMethod),this.dispatchEvent("paymentmethod"),this.complete=e.complete})),this._paymentRequest.on("shippingoptionchange",(e=>{this.set("shippingOption",e.shippingOption),this.dispatchEvent("shippingoptionchange"),this.updateWith=e.updateWith})),this._paymentRequest.on("shippingaddresschange",(e=>{this.set("shippingAddress",e.shippingAddress),this.dispatchEvent("shippingaddresschange"),this.updateWith=e.updateWith})),this._paymentRequest.on("cancel",this.dispatchEvent.bind(this,"cancel")),this._element=dmx.stripe.elements.create("paymentRequestButton",{paymentRequest:this._paymentRequest,classes:t.classes,style:t.style}),this._paymentRequest.canMakePayment().then((t=>{t&&(this.element.mount(e),this.element.on("click",this.dispatchEvent.bind(this,"click")))}))}))},performUpdate(e){this._paymentRequest&&(e.has("country")&&this._paymentRequest.update({country:this.props.country}),e.has("currency")&&this._paymentRequest.update({currency:this.props.currency}),(e.has("label")||e.has("amount")||e.has("pending"))&&this._paymentRequest.update({total:{label:this.props.label,amount:this.props.amount,pending:this.props.pending}}),e.has("items")&&this._paymentRequest.update({displayItems:this.props.items}),e.has("requestName")&&this._paymentRequest.update({requestPayerName:this.props.requestName}),e.has("requestEmail")&&this._paymentRequest.update({requestPayerEmail:this.props.requestEmail}),e.has("requestPhone")&&this._paymentRequest.update({requestPayerPhone:this.props.requestPhone}),e.has("requestShipping")&&this._paymentRequest.update({requestShipping:this.props.requestShipping}),e.has("shippingOptions")&&this._paymentRequest.update({shippingOptions:this.props.shippingOptions}))},destroy(){this._element&&this._element.destroy()}}),dmx.Component("stripe-afterpay-message",{ui:{deprecated:!0},attributes:{amount:{type:Number,default:null,required:!0},currency:{type:String,default:"USD",enum:["USD","CAD","AUD","NZD","GBP"],enum_labels:["US Dollar","Canadian Dollar","Australian Dollar","New Zealand Dollar","British Pound"]},logoType:{type:String,default:"badge",enum:["badge","lockup"]},badgeTheme:{type:String,default:"black-on-mint",enum:["black-on-mint","black-on-white","mint-on-black","white-on-black"]},lockupTheme:{type:String,default:"black",enum:["black","white","mint"]},modalTheme:{type:String,default:"mint",enum:["mint","white"]},introText:{type:String,default:"In",enum:["In","in","Or","or","Pay","pay","Pay in","pay in"]},modalLinkStyle:{type:String,default:"circled-info-icon",enum:["circled-info-icon","learn-more-text","more-info-text"]},isNotEligible:{type:Boolean,default:!1},isCartNotEligible:{type:Boolean,default:!1},hideInterestFree:{type:Boolean,default:!1},hideWith:{type:Boolean,default:!1},max:{type:Number,default:void 0},min:{type:Number,default:void 0},hideLowerLimit:{type:Boolean,default:!1},hideUpperLimit:{type:Boolean,default:!1},amountIsFloat:{type:Boolean,default:!1}},render(e){dmx.stripe.ready((()=>{this._element=dmx.stripe.elements.create("afterpayClearpayMessage",{amount:(this.props.amountIsFloat?100:1)*this.props.amount,currency:this.props.currency,logoType:this.props.logoType,badgeTheme:this.props.badgeTheme,lockupTheme:this.props.lockupTheme,modalTheme:this.props.modalTheme,introText:this.props.introText,modalLinkStyle:this.props.modalLinkStyle,isEligible:!this.props.isNotEligible,isCartEligible:!this.props.isCartNotEligible,showInterestFree:!this.props.hideInterestFree,showWith:this.props.hideWith,max:this.props.max,min:this.props.min,showLowerLimit:!this.props.hideLowerLimit,showUpperLimit:!this.props.hideUpperLimit}),this._element.mount(e)}))},destroy(){this._element&&this._element.destroy()}}),dmx.Component("stripe-checkout-form",{ui:{deprecated:!0},extends:"form",initialData:{error:null,processing:!1,paymentIntent:null,paymentMethodType:"card"},attributes:{credentials:{type:Boolean,default:!1},autosubmit:{type:Boolean,default:!1},timeout:{type:Number,default:0},paymentMethodType:{type:String,default:"card",enum:["afterpay_clearpay","alipay","au_becs_debit","bancontact","card","eps","fpx","giropay","grabpay","ideal","oxxo","p24","sepa_debit","sofort"]},propClientSecret:{type:String,default:"client_secret"},successUrl:{type:String,default:null}},events:{error:Event,success:Event},render(e){dmx.Component("form").prototype.render.call(this,e),this.set("paymentMethodType",this.props.paymentMethodType),this.props.autosubmit&&dmx.nextTick((()=>{this.submit()}))},performUpdate(e){dmx.Component("form").prototype.performUpdate.call(this,e),e.has("paymentMethodType")&&this.set("paymentMethodType",this.props.paymentMethodType)},_submit(){if(!this.data.processing){this.set("error",""),this.set("processing",!0),this._updateErrorDiv("");var e=new FormData(this.$node);this.$node.dmxExtraData&&Object.keys(this.$node.dmxExtraData).forEach((function(t){var s=this.$node.dmxExtraData[t];Array.isArray(s)?(/\[\]$/.test(t)||(t+="[]"),s.forEach((function(s){e.append(t,s)}))):e.set(t,s)}),this);var t=new XMLHttpRequest;t.open("POST",this.$node.action),t.timeout=1e3*this.props.timeout,t.withCredentials=this.props.credentials,t.onload=this.onload.bind(this,t),t.onabort=this.onabort.bind(this),t.onerror=this.onerror.bind(this),t.ontimeout=this.ontimeout.bind(this);try{t.send(e)}catch(e){this._error(e)}}},_error:function(e){this.set("error",e.message),this.set("processing",!1),this.dispatchEvent("error"),this._updateErrorDiv(e.message)},_updateErrorDiv:function(e){var t=document.getElementById("dmxValidatorError"+this.name);t||((t=document.createElement("div")).id="dmxValidatorError"+this.name,t.className="dmxValidator-error invalid-feedback",this.$node.append(t)),t.textContent=e},_success:function(e){this.set("paymentIntent",e),this.set("processing",!1),this.dispatchEvent("success"),this.props["success-url"]&&document.location.replace(this.props["success-url"])},_handleResult:function(e){e.error?this._error(e.error):this._success(e.paymentIntent)},onload:function(e){try{var t=this,s=!1;if(this.children.forEach((function(e){e instanceof dmx.Component("stripe-payment-method")&&(t.props["payment-method-type"]=e.data.selected,s=!0)})),!s){var r=this.$node.querySelector("dmx-stripe-payment-method, [is=dmx-stripe-payment-method]");r&&r.dmxComponent&&(this.props["payment-method-type"]=r.dmxComponent.data.selected)}}catch(e){console.error(e)}try{var n=JSON.parse(e.responseText);if(200==e.status){var i=n[this.props["prop-client-secret"]];if(!i)throw new Error(n.error||n.responseText);switch(this.props["payment-method-type"]){case"card":dmx.stripe.instance.confirmCardPayment(i,{payment_method:{card:dmx.stripe.elements.getElement("card")||dmx.stripe.elements.getElement("cardNumber")}}).then(this._handleResult.bind(this)).catch(this._error.bind(this));break;case"afterpay_clearpay":dmx.stripe.instance.confirmAfterpayClearpayPayment(i,{return_url:this.props["success-url"]}).then(this._handleResult.bind(this)).catch(this._error.bind(this));break;case"alipay":dmx.stripe.instance.confirmAlipayPayment(i,{return_url:this.props["success-url"]}).then(this._handleResult.bind(this)).catch(this._error.bind(this));break;case"au_becs_debit":dmx.stripe.instance.confirmAuBecsDebitPayment(i,{payment_method:{au_becs_debit:dmx.stripe.elements.getElement("auBankAccount")}}).then(this._handleResult.bind(this)).catch(this._error.bind(this));break;case"bancontact":dmx.stripe.instance.confirmBancontactPayment(i,{return_url:this.props["success-url"]}).then(this._handleResult.bind(this)).catch(this._error.bind(this));break;case"eps":dmx.stripe.instance.confirmEpsPayment(i,{return_url:this.props["success-url"]}).then(this._handleResult.bind(this)).catch(this._error.bind(this));break;case"fpx":dmx.stripe.instance.confirmFpxPayment(i,{payment_method:{fpx:dmx.stripe.elements.getElement("fpxBank")},return_url:this.props["success-url"]}).then(this._handleResult.bind(this)).catch(this._error.bind(this));break;case"giropay":dmx.stripe.instance.confirmGiropayPayment(i,{return_url:this.props["success-url"]}).then(this._handleResult.bind(this)).catch(this._error.bind(this));break;case"grabpay":dmx.stripe.instance.confirmGrabPayPayment(i,{return_url:this.props["success-url"]}).then(this._handleResult.bind(this)).catch(this._error.bind(this));break;case"ideal":dmx.stripe.instance.confirmIdealPayment(i,{payment_method:{ideal:dmx.stripe.elements.getElement("idealBank")},return_url:this.props["success-url"]}).then(this._handleResult.bind(this)).catch(this._error.bind(this));break;case"oxxo":dmx.stripe.instance.confirmOxxoPayment(i).then(this._handleResult.bind(this)).catch(this._error.bind(this));break;case"p24":dmx.stripe.instance.confirmP24Payment(i,{payment_method:{p24:dmx.stripe.elements.getElement("p24Bank")},return_url:this.props["success-url"]}).then(this._handleResult.bind(this)).catch(this._error.bind(this));break;case"sepa_debit":dmx.stripe.instance.confirmSepaDebitPayment(i,{payment_method:{p24:dmx.stripe.elements.getElement("iban")}}).then(this._handleResult.bind(this)).catch(this._error.bind(this));break;case"sofort":dmx.stripe.instance.confirmSofortPayment(i,{return_url:this.props["success-url"]}).then(this._handleResult.bind(this)).catch(this._error.bind(this))}}else this._error({message:"Request returned with status "+e.status+"."})}catch(e){this._error(e)}},onabort:function(){this._error({message:"The request was aborted."})},onerror:function(e){this._error(e)},ontimeout:function(){this._error({message:"The request timed out."})}}),dmx.Component("stripe-payment-method",{ui:{deprecated:!0},initialData:{selected:"card"},attributes:{paymentMethods:{type:Array,default:["card"],enum:["afterpay_clearpay","alipay","au_becs_debit","bancontact","card","eps","fpx","giropay","grabpay","ideal","oxxo","p24","sepa_debit","sofort"]},selected:{type:String,default:"card",enum:["afterpay_clearpay","alipay","au_becs_debit","bancontact","card","eps","fpx","giropay","grabpay","ideal","oxxo","p24","sepa_debit","sofort"]},display:{type:String,default:"select",enum:["select","pills","tabs","buttons"]},hidePostalCode:{type:Boolean,default:!1},iconStyle:{type:String,default:"default",enum:["solid","default"]},hideIcon:{type:Boolean,default:!1},hideErrors:{type:Boolean,default:!1},accountHolderType:{type:String,default:"individual",enum:["company","individual"]},localeAfterpayClearpay:{type:String,default:"Afterpay"},localeAlipay:{type:String,default:"Alipay"},localeAuBecsDebit:{type:String,default:"BECS debit"},localeBancontact:{type:String,default:"Bancontact"},localeCard:{type:String,default:"Card"},localeEps:{type:String,default:"EPS"},localeFpx:{type:String,default:"FPX"},localeGiropay:{type:String,default:"Giropay"},localeGrabpay:{type:String,default:"GrabPay"},localeIdeal:{type:String,default:"iDEAL"},localeOxxo:{type:String,default:"OXXO"},localeP24:{type:String,default:"Przelewy24"},localeSepaDebit:{type:String,default:"SEPA debit"},localeSofort:{type:String,default:"Sofort"},localeFpxConditions:{type:String,default:"By Proceding, you agree to FPX’s Terms and Conditions."},localeSepaDebitMandate:{type:String,default:"By providing your payment information and confirming this payment, you authorise (A) {{company}} and Stripe, our payment service provider, to send instructions to your bank to debit your account and (B) your bank to debit your account in accordance with those instructions. As part of your rights, you are entitled to a refund from your bank under the terms and conditions of your agreement with your bank. A refund must be claimed within 8 weeks starting from the date on which your account was debited. Your rights are explained in a statement that you can obtain from your bank. You agree to receive notifications for future debits up to 2 days before they occur."},localeAuBecsDebitMandate:{type:String,default:"By providing your bank account details and confirming this payment, you agree to this Direct Debit Request and the Direct Debit Request service agreement, Direct Debit Request service agreement, and authorise Stripe Payments Australia Pty Ltd ACN 160 180 343 Direct Debit User ID number 507156 (“Stripe”) to debit your account through the Bulk Electronic Clearing System (BECS) on behalf of (the “Merchant”) for any amounts separately communicated to you by the Merchant. You certify that you are either an account holder or an authorised signatory on the account listed above."},localeCompany:{type:String,default:"Us"}},methods:{select(e){this._select(e)}},render(e){this._render()},performUpdate(e){e.has("display")||e.has("paymentMethods")?this._render():e.has("selected")&&this._select(this.props.selected)},_bootstrapVersion:()=>window.bootstrap&&bootstrap.Alert?parseInt(bootstrap.Alert.VERSION):0,_select(e){if(this.props.paymentMethods.includes(e))switch(this.props.display){case"pills":case"tabs":break;case"buttons":let t=this.$node.querySelector("input[value="+e+"]");t&&t.click();break;default:let s=this.$node.querySelector("select");s&&(s.value=e)}},_render(){let e="",t=this._bootstrapVersion();if("string"!=typeof this.props.paymentMethods){if(Array.isArray(this.props.paymentMethods)){switch(this.props.display){case"pills":case"tabs":e+='<ul class="nav nav-'+this.props.display+'">',this.props.paymentMethods.forEach((s=>{e+='<li class="nav-item">',e+=4==t?'<a value="'+s+'" class="nav-link'+(s==this.props.selected?" active":"")+'" data-toggle="tab" data-target="#payment-method-'+s+'">'+this.props["locale"+this._format(s)]+"</a>":'<button value="'+s+'" class="nav-link'+(s==this.props.selected?" active":"")+'" data-bs-toggle="tab" data-bs-target="#payment-method-'+s+'">'+this.props["locale"+this._format(s)]+"</button>",e+="</li>"})),e+="</ul>";break;case"buttons":4==t?(e+='<div class="btn-group btn-group-toggle" data-toggle="buttons" role="group">',this.props.paymentMethods.forEach((t=>{e+='<label class="btn btn-secondary'+(t==this.props.selected?" active":"")+'">',e+='<input type="radio" name="paymentmethod" value="'+t+'"'+(t==this.props.selected?" checked":"")+">",e+=this.props["locale"+this._format(t)],e+="</label>"})),e+="</div>"):(e+='<div class="btn-group" role="group">',this.props["payment-methods"].forEach((t=>{e+='<input type="radio" class="btn-check" name="paymentmethod" value="'+t+'" id="paymentmethod_'+t+'" autocomplete="off"'+(t==this.props.selected?" checked":"")+">",e+='<label class="btn btn-outline-primary" for="paymentmethod_'+t+'">'+this.props["locale"+this._format(t)]+"</label>"})),e+="</div>");break;default:e+=4==t?'<select class="form-control">':'<select class="form-select">',this.props.paymentMethods.forEach((t=>{e+='<option value="'+t+'"'+(t==this.props.selected?" selected":"")+">"+this.props["locale"+this._format(t)]+"</option>"})),e+="</select>",e+="</div>"}switch(e+='<div class="tab-content my-3">',this.props.paymentMethods.forEach((t=>{e+='<div id="payment-method-'+t+'" class="tab-pane'+(t==this.props.selected?" active":"")+'">',e+='<div id="'+t+'-element"></div>',e+='<div id="'+t+'-error" class="invalid-feedback"></div>',e+='<div id="'+t+'-mandate"></div>',e+="</div>"})),e+="</div>",this.$node.innerHTML=e,this.props.display){case"pills":case"tabs":if(4==t)$('a[data-toggle="tab"]',this.$node).on("shown.bs.tab",(e=>{this.set("selected",e.target.getAttribute("value"))}));else this.$node.querySelector(".nav").addEventListener("shown.bs.tab",(e=>{this.set("selected",e.target.getAttribute("value"))}));break;case"buttons":if(4==t)for(var s=this.$node.querySelectorAll("input"),r=0;r<s.length;r++)s[r].onchange=e=>{var t=this.$node.querySelector("input:checked");this.set("selected",t.value),this.$node.querySelector(".tab-content .active").classList.remove("active"),document.getElementById("payment-method-"+t.value).classList.add("active")};else for(s=this.$node.querySelectorAll("input"),r=0;r<s.length;r++)s[r].onchange=e=>{var t=this.$node.querySelector("input:checked");this.set("selected",t.value),this.$node.querySelector(".active").classList.remove("active"),document.getElementById("payment-method-"+t.value).classList.add("active")};break;default:var n=this.$node.querySelector("select");n.onchange=e=>{this.set("selected",n.value),this.$node.querySelector(".active").classList.remove("active"),document.getElementById("payment-method-"+n.value).classList.add("active")}}this.props.paymentMethods.forEach((e=>{var t=dmx.stripe.theme.bootstrap.classes,s=dmx.stripe.theme.bootstrap.style;switch(e){case"card":var r=dmx.stripe.elements.getElement("card");r||((r=dmx.stripe.elements.create("card",{classes:t,style:s,hidePostalCode:this.props.hidePostalCode,iconStyle:this.props.iconStyle,hideIcon:this.props.hideIcon})).mount("#"+e+"-element"),r.on("change",(t=>{if(!this.props.hideErrors){var s=document.getElementById(e+"-error");t.error?s.textContent=t.error.message:s.textContent=""}})));break;case"au_becs_debit":var n=dmx.stripe.elements.getElement("auBankAccount");n||((n=dmx.stripe.elements.create("auBankAccount",{classes:t,style:s,iconStyle:this.props.iconStyle,hideIcon:this.props.hideIcon})).mount("#"+e+"-element"),n.on("change",(t=>{if(!this.props.hideErrors){var s=document.getElementById(e+"-error");t.error?s.textContent=t.error.message:s.textContent=""}}))),document.getElementById(e+"-mandate").textContent=this.props["locale"+this._format(e)+"Mandate"].replace("{{company}}",this.props.localeCompany),document.getElementById(e+"-mandate").className="alert alert-info mt-3";break;case"sepa_debit":var i=dmx.stripe.elements.getElement("iban");i||((i=dmx.stripe.elements.create("iban",{classes:t,style:s,supportedCountries:["SEPA"],iconStyle:this.props.iconStyle,hideIcon:this.props.hideIcon})).mount("#"+e+"-element"),i.on("change",(t=>{if(!this.props.hideErrors){var s=document.getElementById(e+"-error");t.error?s.textContent=t.error.message:s.textContent=""}}))),document.getElementById(e+"-mandate").textContent=this.props["locale-"+e+"-mandate"].replace("{{company}}",this.props.localeCompany),document.getElementById(e+"-mandate").className="alert alert-info mt-3";break;case"ideal":var a=dmx.stripe.elements.getElement("idealBank");a||((a=dmx.stripe.elements.create("idealBank",{classes:t,style:s,hideIcon:this.props.hideIcon})).mount("#"+e+"-element"),a.on("change",(t=>{if(!this.props.hideErrors){var s=document.getElementById(e+"-error");t.error?s.textContent=t.error.message:s.textContent=""}})));break;case"fpx":var o=dmx.stripe.elements.getElement("fpxBank");o||((o=dmx.stripe.elements.create("fpxBank",{classes:t,style:s,accountHolderType:this.props.accountHolderType})).mount("#"+e+"-element"),o.on("change",(t=>{if(!this.props.hideErrors){var s=document.getElementById(e+"-error");t.error?s.textContent=t.error.message:s.textContent=""}}))),document.getElementById(e+"-mandate").textContent=this.props["locale"+this._format(e)+"Conditions"].replace("{{company}}",this.props.localeCompany),document.getElementById(e+"-mandate").className="alert alert-info mt-3";break;case"p24":var l=dmx.stripe.elements.getElement("p24Bank");l||((l=dmx.stripe.elements.create("p24Bank",{classes:t,style:s,hideIcon:this.props.hideIcon})).mount("#"+e+"-element"),l.on("change",(t=>{if(!this.props.hideErrors){var s=document.getElementById(e+"-error");t.error?s.textContent=t.error.message:s.textContent=""}})));break;case"eps":var h=dmx.stripe.elements.getElement("epsBank");h||((h=dmx.stripe.elements.create("epsBank",{classes:t,style:s,hideIcon:this.props.hideIcon})).mount("#"+e+"-element"),h.on("change",(t=>{if(!this.props.hideErrors){var s=document.getElementById(e+"-error");t.error?s.textContent=t.error.message:s.textContent=""}})))}}))}}else this.props.paymentMethods=this.props.paymentMethods.split(",")},_format:e=>e[0].toUpperCase()+e.slice(1).replace(/_./g,((e,t)=>t.toUpperCase()))}),dmx.Component("stripe-payment-method-messaging",{attributes:{amount:{type:Number,default:null,required:!0},currency:{type:String,default:null,required:!0,enum:["USD","GBP","EUR","DKK","NOK","SEK","CAD","AUD"],enum_labels:["US Dollar","British Pound","Euro","Danish Krone","Norwegian Krone","Swedish Krona","Canadian Dollar","Australian Dollar"]},countryCode:{type:String,default:null,required:!0,enum:["US","CA","AU","NZ","GB","IE","FR","ES","DE","AT","BE","DK","FI","IT","NL","NO","SE"],enum_labels:["United States","Canada","Australia","New Zealand","United Kingdom","Ireland","France","Spain","Germany","Austria","Belgium","Denmark","Finland","Italy","Netherlands","Norway","Sweden"]}},render(e){dmx.stripe.ready((()=>{this._element=dmx.stripe.elements.create("paymentMethodMessaging",{amount:this.props.amount,currency:this.props.currency,countryCode:this.props.countryCode}),this._element.mount(e)}))},destroy(){this._element&&this._element.destroy()}}),dmx.Component("stripe-elements",{initialData:{ready:!1,error:null},attributes:{key:{type:String,default:null},account:{type:String,default:null},locale:{type:String,default:"auto",enum:["auto","ar","bg","ca","cs","da","de","el","en","en-GB","es","es-419","et","fi","fr","fr-CA","he","hi","hr","hu","id","it","ja","ko","lt","lv","ms","mt","nb","nl","pl","pt","pt-BR","ro","ru","sk","sl","sv","th","tr","uk","vi","zh","zh-HK","zh-TW"],enum_labels:["Auto","Arabic","Bulgarian","Catalan","Czech","Danish","German","Greek","English","English (UK)","Spanish","Spanish (Latin America)","Estonian","Finnish","French","French (Canada)","Hebrew","Hindi","Croatian","Hungarian","Indonesian","Italian","Japanese","Korean","Lithuanian","Latvian","Malay","Maltese","Norwegian","Dutch","Polish","Portuguese","Portuguese (Brazil)","Romanian","Russian","Slovak","Slovenian","Swedish","Thai","Turkish","Ukrainian","Vietnamese","Chinese","Chinese (Hong Kong)","Chinese (Taiwan)"]},loader:{type:String,default:"auto",enum:["auto","always","never"]},flow:{type:String,default:"withoutIntent",enum:["none","withIntent","withoutIntent"],ui:{help:"The flow determines how the payment is processed. If you are using an Intent, you should use the withIntent flow. If you want to collect payment details before creating an Intent, you should use the withoutIntent flow."}},appearanceTheme:{type:String,default:"stripe",enum:["stripe","night","flat","bootstrap"]},appearanceVariables:{type:Object,default:{},ui:{isDynamic:!0}},appearanceRules:{type:Object,default:{},ui:{isDynamic:!0}},clientSecret:{type:String,default:null,depends_of:{name:"flow",value:"withIntent"}},mode:{type:String,default:null,enum:["payment","setup","subscription"],depends_of:{name:"flow",value:"withoutIntent"}},amount:{type:Number,default:null,depends_of:{name:"flow",value:"withoutIntent"}},currency:{type:String,default:null,enum:["usd","aed","afn","all","amd","ang","aoa","ars","aud","awg","azn","bam","bbd","bdt","bgn","bif","bmd","bnd","bob","brl","bsd","bwp","byn","bzd","cad","cdf","chf","clp","cny","cop","crc","cve","czk","djf","dkk","dop","dzd","egp","etb","eur","fjd","fkp","gbp","gel","gip","gmd","gnf","gtq","gyd","hkd","hnl","htg","huf","idr","ils","inr","isk","jmd","jpy","kes","kgs","khr","kmf","krw","kyd","kzt","lak","lbp","lkr","lrd","lsl","mad","mdl","mga","mkd","mmk","mnt","mop","mur","mvr","mwk","mxn","myr","mzn","nad","ngn","nio","nok","npr","nzd","pab","pen","pgk","php","pkr","pln","pyg","qar","ron","rsd","rub","rwf","sar","sbd","scr","sek","sgd","shp","sle","sos","srd","std","szl","thb","tjs","top","try","ttd","twd","tzs","uah","ugx","uyu","uzs","vnd","vuv","wst","xaf","xcd","xof","xpf","yer","zar","zmw"],enum_labels:["US Dollar","United Arab Emirates Dirham","Afghan Afghani","Albanian Lek","Armenian Dram","Netherlands Antillean Guilder","Angolan Kwanza","Argentine Peso","Australian Dollar","Aruban Florin","Azerbaijani Manat","Bosnia-Herzegovina Convertible Mark","Barbadian Dollar","Bangladeshi Taka","Bulgarian Lev","Burundian Franc","Bermudian Dollar","Brunei Dollar","Bolivian Boliviano","Brazilian Real","Bahamian Dollar","Botswanan Pula","Belarusian Ruble","Belize Dollar","Canadian Dollar","Congolese Franc","Swiss Franc","Chilean Peso","Chinese Yuan","Colombian Peso","Costa Rican Colón","Cape Verdean Escudo","Czech Republic Koruna","Djiboutian Franc","Danish Krone","Dominican Peso","Algerian Dinar","Egyptian Pound","Ethiopian Birr","Euro","Fijian Dollar","Falkland Islands Pound","British Pound Sterling","Georgian Lari","Gibraltar Pound","Gambian Dalasi","Guinean Franc","Guatemalan Quetzal","Guyanaese Dollar","Hong Kong Dollar","Honduran Lempira","Haitian Gourde","Hungarian Forint","Indonesian Rupiah","Israeli New Sheqel","Indian Rupee","Icelandic Króna","Jamaican Dollar","Japanese Yen","Kenyan Shilling","Kyrgystani Som","Cambodian Riel","Comorian Franc","South Korean Won","Cayman Islands Dollar","Kazakhstani Tenge","Laotian Kip","Lebanese Pound","Sri Lankan Rupee","Liberian Dollar","Lesotho Loti","Moroccan Dirham","Moldovan Leu","Malagasy Ariary","Macedonian Denar","Myanma Kyat","Mongolian Tugrik","Macanese Pataca","Mauritian Rupee","Maldivian Rufiyaa","Malawian Kwatcha","Mexican Peso","Malaysian Ringgit","Mozambican Metical","Namibian Dollar","Nigerian Naira","Nicaraguan Córdoba","Norwegian Krone","Nepalese Rupee","New Zealand Dollar","Panamanian Balboa","Peruvian Nuevo Sol","Papua New Guinean Kina","Philippine Peso","Pakistani Rupee","Polish Zloty","Paraguayan Guarani","Qatari Rial","Romanian Leu","Serbian Dinar","Russian Ruble","Rwandan Franc","Saudi Riyal","Solomon Islands Dollar","Seychellois Rupee","Swedish Krona","Singapore Dollar","Saint Helena Pound","Sierra Leonean Leone","Somali Shilling","Surinamese Dollar","São Tomé and Príncipe Dobra","Swazi Lilangeni","Thai Baht","Tajikistani Somoni","Tongan Paʻanga","Turkish Lira","Trinidad and Tobago Dollar","New Taiwan Dollar","Tanzanian Shilling","Ukrainian Hryvnia","Ugandan Shilling","Uruguayan Peso","Uzbekistan Som","Vietnamese Dong","Vanuatu Vatu","Samoan Tala","CFA Franc BEAC","East Caribbean Dollar","CFA Franc BCEAO","CFP Franc","Yemeni Rial","South African Rand","Zambian Kwacha"]},setupFutureUsage:{type:String,default:null,enum:["on_session","off_session"],depends_of:{name:"flow",value:"withoutIntent"}},captureMethod:{type:String,default:null,enum:["automatic","automatic_async","manual"],depends_of:{name:"flow",value:"withoutIntent"}},onBehalfOf:{type:String,default:null,depends_of:{name:"flow",value:"withoutIntent"}},paymentMethodTypes:{type:Array,default:null,depends_of:{name:"flow",value:"withoutIntent"}},paymentMethodConfiguration:{type:String,default:null,depends_of:{name:"flow",value:"withoutIntent"}},paymentMethodOptions:{type:Object,default:null,depends_of:{name:"flow",value:"withoutIntent"}}},methods:{fetchUpdates(){return this._element.fetchUpdates().then((e=>{e.error&&(this.set("error",e.error),this.dispatchEvent("error"))}))},submit(){return this._element.submit().then((e=>{e.error&&(this.set("error",e.error),this.dispatchEvent("error"))}))}},events:{ready:Event,error:Event},render:!1,init(){this._setBootstrapVariables=this._setBootstrapVariables.bind(this),this._init()},performUpdate(e){if(!this._elements)return this._init();e.has("locale")&&this._elements.update({locale:this.props.locale}),e.has("mode")&&this._elements.update({mode:this.props.mode}),e.has("currency")&&this._elements.update({currency:this.props.currency}),e.has("amount")&&this._elements.update({amount:this.props.amount}),e.has("setupFutureUsage")&&this._elements.update({setupFutureUsage:this.props.setupFutureUsage}),e.has("captureMethod")&&this._elements.update({captureMethod:this.props.captureMethod}),e.has("onBehalfOf")&&this._elements.update({onBehalfOf:this.props.onBehalfOf}),e.has("paymentMethodTypes")&&this._elements.update({paymentMethodTypes:this.props.paymentMethodTypes}),e.has("paymentMethodOptions")&&this._elements.update({paymentMethodOptions:this.props.paymentMethodOptions}),(e.has("appearanceTheme")||e.has("appearanceVariables")||e.has("appearanceRules"))&&this._elements.update({appearance:{theme:this.props.appearanceTheme,variables:this.props.appearanceVariables,rules:this.props.appearanceRules}})},destroy(){this._observer&&(this._observer.disconnect(),this._observer=null),this._mediaQuery&&(this._mediaQuery.removeEventListener("change",this._setBootstrapVariables),this._mediaQuery=null)},_init(){switch(this.props.flow){case"withIntent":this.props.clientSecret&&this._create();break;case"withoutIntent":this.props.mode&&this.props.amount&&this.props.currency&&this._create();break;default:this._create()}},_setBootstrapVariables(){const e=e=>getComputedStyle(document.body).getPropertyValue(e);this.props.appearanceVariables={fontFamily:e("--bs-body-font-family"),fontSizeBase:e("--bs-body-font-size"),borderRadius:e("--bs-border-radius"),colorPrimary:e("--bs-primary"),colorBackground:e("--bs-body-bg"),colorText:e("--bs-body-color"),colorDanger:e("--bs-danger"),fontLineHeight:e("--bs-body-line-height"),colorSuccess:e("--bs-success"),colorWarning:e("--bs-warning"),colorTextSecondary:e("--bs-secondary-color"),colorTextPlaceholder:e("--bs-secondary-color")}},_create(){let e={locale:this.props.locale};"bootstrap"==this.props.appearanceTheme&&(this.destroy(),this._mediaQuery=window.matchMedia("(prefers-color-scheme: dark)"),this._mediaQuery.addEventListener("change",this._setBootstrapVariables),this._observer=new MutationObserver(this._setBootstrapVariables),this._observer.observe(document.documentElement,{attributes:!0,attributeFilter:["data-bs-theme"]}),this._setBootstrapVariables());let t={appearance:{theme:this.props.appearanceTheme,variables:this.props.appearanceVariables,rules:this.props.appearanceRules},loader:this.props.loader,currency:this.props.currency};if(this.props.account&&(e.stripeAccount=this.props.account),this.props.clientSecret&&(t.clientSecret=this.props.clientSecret),this.props.mode&&(t.mode=this.props.mode),this.props.currency&&(t.currency=this.props.currency),this.props.amount&&(t.amount=this.props.amount),this.props.setupFutureUsage&&(t.setupFutureUsage=this.props.setupFutureUsage),this.props.captureMethod&&(t.captureMethod=this.props.captureMethod),this.props.onBehalfOf&&(t.onBehalfOf=this.props.onBehalfOf),this.props.paymentMethodTypes&&(t.paymentMethodTypes=this.props.paymentMethodTypes),this.props.paymentMethodConfiguration&&(t.paymentMethodConfiguration=this.props.paymentMethodConfiguration),this.props.paymentMethodOptions&&(t.paymentMethodOptions=this.props.paymentMethodOptions),this._stripe=Stripe(this.props.key,e),this._elements=this._stripe.elements(t),dmx.stripe.instance=this._stripe,dmx.stripe.elements=this._elements,dmx.stripe.wait.size){for(const e of dmx.stripe.wait)e(dmx.stripe.instance);dmx.stripe.wait.clear()}this.set("ready",!0),this.dispatchEvent("ready")}}),dmx.Component("stripe-address",{initialData:{complete:!1,empty:!0,isNewAddress:!1,value:void 0,error:void 0},attributes:{mode:{type:String,default:"shipping",enum:["shipping","billing"]},autocomplete:{type:String,default:"automatic",enum:["automatic","disabled","google_maps_api"]},googleApiKey:{type:String,default:null},blockPoBox:{type:Boolean,default:!1},displayName:{type:String,default:"full",enum:["full","split","organization"]}},methods:{blur(){this._element&&this._element.blur()},clear(){this._element&&this._element.clear()},focus(){this._element&&this._element.focus()}},render(e){dmx.stripe.ready((()=>{const t={mode:this.props.mode,autocomplete:{mode:this.props.autocomplete},blockPoBox:this.props.blockPoBox,display:{name:this.props.displayName}};this.props.googleApiKey&&(t.autocomplete.apiKey=this.props.googleApiKey),this._element=dmx.stripe.elements.create("address",t),this._element.mount(e),this._element.on("change",this._changeHandler.bind(this)),this._element.on("loaderror",this._loadErrorHandler.bind(this)),this._element.on("change",this.dispatchEvent.bind(this,"change")),this._element.on("ready",this.dispatchEvent.bind(this,"ready")),this._element.on("focus",this.dispatchEvent.bind(this,"focus")),this._element.on("blur",this.dispatchEvent.bind(this,"blur")),this._element.on("escape",this.dispatchEvent.bind(this,"escape"))}))},performUpdate(e){},destroy(){this._element&&this._element.destroy()},_changeHandler(e){this.set(e)},_loadErrorHandler(e){this.set(e)}}),dmx.Component("stripe-payment",{initialData:{complete:!1,empty:!1,collapsed:!1,value:void 0,error:void 0,isLoading:!1},attributes:{layout:{type:String,default:"tabs",enum:["accordion","tabs"]},billingDetails:{type:String,default:"auto",enum:["auto","never"]},readonly:{type:Boolean,default:!1}},methods:{blur(){this._element&&this._element.blur()},clear(){this._element&&this._element.clear()},focus(){this._element&&this._element.focus()},fetchUpdates(){if(this._element)return this.set("isLoading",!0),this._element.fetchUpdates().then((e=>{this.set("isLoading",!1),e.error&&(this.set("error",e.error),this.dispatchEvent("error"))}))},collapse(){this._element&&this._element.collapse()},confirmPayment(e){if(this._element)return this.set("isLoading",!0),dmx.stripe.instance.confirmPayment({elements:dmx.stripe.elements,...e}).then((e=>(this.set("isLoading",!1),e.error&&(this.set("error",e.error),this.dispatchEvent("error")),e)))},confirmSetup(e){if(this._element)return this.set("isLoading",!0),dmx.stripe.instance.confirmSetup({elements:dmx.stripe.elements,...e}).then((e=>(this.set("isLoading",!1),e.error&&(this.set("error",e.error),this.dispatchEvent("error")),e)))}},events:{change:Event,ready:Event,focus:Event,blur:Event,escape:Event,error:Event},render(e){dmx.stripe.ready((()=>{this._element=dmx.stripe.elements.create("payment",{layout:this.props.layout,fields:{billingDetails:this.props.billingDetails},readOnly:this.props.readonly}),this._element.mount(e),this._element.on("change",this._changeHandler.bind(this)),this._element.on("loaderror",this._loadErrorHandler.bind(this)),this._element.on("change",this.dispatchEvent.bind(this,"change")),this._element.on("ready",this.dispatchEvent.bind(this,"ready")),this._element.on("focus",this.dispatchEvent.bind(this,"focus")),this._element.on("blur",this.dispatchEvent.bind(this,"blur")),this._element.on("escape",this.dispatchEvent.bind(this,"escape"))}))},performUpdate(e){this._element&&(e.has("layout")&&this._element.update({layout:this.props.layout}),e.has("billingDetails")&&this._element.update({fields:{billingDetails:this.props.billingDetails}}),e.has("readonly")&&this._element.update({readOnly:this.props.readonly}))},destroy(){this._element&&this._element.destroy()},_changeHandler(e){this.set(e)},_loadErrorHandler(e){this.set(e)}}),dmx.Component("stripe-link-authentication",{initialData:{complete:!1,empty:!0,value:{email:""},error:void 0},attributes:{email:{type:String,default:""}},methods:{blur(){this._element&&this._element.blur()},clear(){this._element&&this._element.clear()},focus(){this._element&&this._element.focus()}},render(e){dmx.stripe.ready((()=>{this._element=dmx.stripe.elements.create("linkAuthentication",{defaultValues:{email:this.props.email}}),this._element.mount(e),this._element.on("change",this._changeHandler.bind(this)),this._element.on("loaderror",this._loadErrorHandler.bind(this)),this._element.on("change",this.dispatchEvent.bind(this,"change")),this._element.on("ready",this.dispatchEvent.bind(this,"ready")),this._element.on("focus",this.dispatchEvent.bind(this,"focus")),this._element.on("blur",this.dispatchEvent.bind(this,"blur")),this._element.on("escape",this.dispatchEvent.bind(this,"escape"))}))},performUpdate(e){this._element&&e.has("email")&&this._element.update({defaultValues:{email:this.props.email}})},destroy(){this._element&&this._element.destroy()},_changeHandler(e){this.set(e)},_loadErrorHandler(e){this.set(e)}}),dmx.Component("stripe-embedded-checkout",{attributes:{key:{type:String,default:null},sessionUrl:{type:String,default:null},lineItems:{type:Array,default:[]}},render:!1,init(){this._init()},performUpdate(e){e.has("key")?this._init():(e.has("sessionUrl")||e.has("lineItems"))&&this._render()},_init(){this.props.key&&(this._stripe=Stripe(this.props.key),this._render())},_render(){if(!this._stripe||!this.props.sessionUrl)return;this._stripe.initEmbeddedCheckout({fetchClientSecret:()=>fetch(this.props.sessionUrl,{method:"POST",credentials:"include",headers:{"Content-Type":"application/json"},body:JSON.stringify({lineItems:this.props.lineItems})}).then((e=>e.json())).then((e=>e.client_secret))}).then((e=>{e.mount(this.$node)}))}}),dmx.Component("stripe-express-checkout",{initialData:{error:void 0},attributes:{buttonHeight:{type:Number,default:44},buttonTypeApplePay:{type:String,default:"plain",enum:["add-money","book","buy","check-out","continue","contribute","donate","order","plain","reload","rent","subscribe","support","tip","top-up"]},buttonTypeGooglePay:{type:String,default:"buy",enum:["book","buy","checkout","donate","order","pay","plain","subscribe"]},buttonTypePaypal:{type:String,default:"paypal",enum:["paypal","checkout","buynow","pay"]},buttonThemeApplePay:{type:String,default:"default",enum:["default","black","white","white-outline"]},buttonThemeGooglePay:{type:String,default:"default",enum:["default","black","white"]},buttonThemePaypal:{type:String,default:"default",enum:["default","gold","blue","silver","white","black"]},maxColumns:{type:Number,default:0},maxRows:{type:Number,default:0},overflow:{type:String,default:"auto",enum:["auto","never"]}},methods:{blur(){this._element&&this._element.blur()},clear(){this._element&&this._element.clear()},focus(){this._element&&this._element.focus()}},events:{confirm:Event,cancel:Event},render(e){dmx.stripe.ready((()=>{const t={buttonHeight:this.props.buttonHeight,buttonTheme:{},buttonType:{applePay:this.props.buttonTypeApplePay,googlePay:this.props.buttonTypeGooglePay,paypal:this.props.buttonTypePaypal},layout:{maxColumns:this.props.maxColumns,maxRows:this.props.maxRows,overflow:this.props.overflow}};"default"!=this.props.buttonThemeApplePay&&(t.buttonTheme.applePay=this.props.buttonThemeApplePay),"default"!=this.props.buttonThemeGooglePay&&(t.buttonTheme.googlePay=this.props.buttonThemeGooglePay),"default"!=this.props.buttonThemePaypal&&(t.buttonTheme.paypal=this.props.buttonThemePaypal),this._element=dmx.stripe.elements.create("expressCheckout",t),this._element.mount(e),this._element.on("confirm",this._confirmHandler.bind(this)),this._element.on("cancel",this._cancelHandler.bind(this))}))},performUpdate(e){(e.has("maxColumns")||e.has("maxRows")||e.has("overflow"))&&this._element.update({layout:{maxColumns:this.props.maxColumns,maxRows:this.props.maxRows,overflow:this.props.overflow}})},destroy(){this._element&&this._element.destroy()},_confirmHandler(e){this.dispatchEvent("confirm",{event:e})},_cancelHandler(e){this.dispatchEvent("cancel",{event:e})}});
//# sourceMappingURL=dmxStripe.js.map
